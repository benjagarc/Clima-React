{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","datosConsulta","onSubmit","this","id","ref","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","_this$props$resultado","resultado","name","weather","main","urlIcono","concat","icon","temp","toFixed","src","alt","temp_max","temp_min","App","state","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","json","datos","setState","catch","console","log","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4LAiBeA,EAdA,SAACC,GAAD,OACbC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcJ,EAAMK,YC2D1BC,6MA3DbC,UAAUC,IAAMC,cAChBC,QAAQF,IAAMC,cAGdE,YAAa,SAACC,GAEZA,EAAEC,iBAGF,IAAMC,EAAU,CACdC,OAAOC,EAAKT,UAAUU,QAAQC,MAC9BC,KAAKH,EAAKN,QAAQO,QAAQC,OAO5BF,EAAKhB,MAAMoB,cAAcN,4EAIzB,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMkB,SAAUC,KAAKX,aACnBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,SAAQoB,GAAG,SAASC,IAAKF,KAAKf,UAAWkB,KAAK,SAC9CxB,EAAAC,EAAAC,cAAA,SAAOuB,QAAQ,UAAf,aAEFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,UAAQqB,IAAKF,KAAKZ,SAChBT,EAAAC,EAAAC,cAAA,UAAQe,MAAM,GAAGS,cAAY,GAA7B,oBACA1B,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,aACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,YACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,cACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,aACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,kBACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,aACAjB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,MAAd,YAEFjB,EAAAC,EAAAC,cAAA,SAAOuB,QAAQ,UAEjBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,SAAOsB,KAAK,SAAUrB,UAAU,qDACLc,MAAM,0BAlDxBU,aCmBVC,EAnBD,SAAC7B,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACdJ,EAAM8B,aCyCRC,6MA7CbC,iBAAiB,WAAI,IAAAC,EAIWjB,EAAKhB,MAAMkC,UAAlCC,EAJYF,EAIZE,KAAOC,EAJKH,EAILG,QAASC,EAJJJ,EAIII,KACvB,IAAIF,IAASC,IAAYC,EAAM,OAAO,KAEtC,IAEMC,EAAQ,mCAAAC,OAAoCH,EAAQ,GAAGI,KAA/C,QAEd,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,+CACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,kCAA0BgC,EAA1B,KACAlC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,YACciC,EAAKI,KAXxB,QAWqCC,QAAQ,GADxC,QAEMzC,EAAAC,EAAAC,cAAA,OAAKwC,IAAKL,EAAUM,IATlC,wBAWY3C,EAAAC,EAAAC,cAAA,qCAA0BkC,EAAKQ,SAdxC,QAcyDH,QAAQ,GAAxD,UACAzC,EAAAC,EAAAC,cAAA,gCAAwBkC,EAAKS,SAftC,QAeuDJ,QAAQ,GAAtD,uFAYtB,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVkB,KAAKU,2BAtCEJ,aCiGLmB,6MA3FbC,MAAM,CACJC,MAAM,GACNC,SAAS,GACThB,UAAU,MAkBZiB,aAAc,WAAI,IAAAC,EACIpC,EAAKgC,MAAME,SAAxBnC,EADSqC,EACTrC,OAAOI,EADEiC,EACFjC,KACd,IAAIJ,IAAWI,EAAM,OAAO,KAE5B,IACMkC,EAAG,qDAAAd,OAAsDxB,EAAtD,KAAAwB,OAAgEpB,EAAhE,WAAAoB,OADG,oCAOZe,MAAMD,GAAKE,KAAK,SAAAzC,GACd,OAAOA,EAAU0C,SAChBD,KAAM,SAAAE,GACPzC,EAAK0C,SAAS,CACZxB,UAAUuB,MAEXE,MAAM,SAAAV,GACPW,QAAQC,IAAIZ,QAShB7B,cAAe,SAAAN,GACU,KAApBA,EAAUC,QAAgC,KAAjBD,EAAUK,KACpCH,EAAK0C,SAAS,CACZT,OAAM,IAGRjC,EAAK0C,SAAS,CACZR,SAASpC,EACTmC,OAAM,uFAlDOa,EAAWC,GACzBA,EAAUb,WAAa5B,KAAK0B,MAAME,UAEjC5B,KAAK6B,2DAMT7B,KAAKoC,SAAS,CACZT,OAAO,qCA+CH,IAEFf,EAFGe,EAAQ3B,KAAK0B,MAAbC,MACAe,EAAK1C,KAAK0B,MAAMd,UAAhB8B,IAYP,OARE9B,EAFCe,EAEShD,EAAAC,EAAAC,cAAC8D,EAAD,CAAOnC,QAAQ,kCACT,QAARkC,EACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAOnC,QAAQ,yBAGf7B,EAAAC,EAAAC,cAAC+D,EAAD,CAAOhC,UAAWZ,KAAK0B,MAAMd,YAIvCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgE,EAAD,CACE9D,OAAO,gBAETJ,EAAAC,EAAAC,cAACiE,EAAD,CACEhD,cAAeE,KAAKF,gBAErBc,UAtFSN,aCKEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECZNC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.962dfa08.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n  <div>\n    <nav>\n      <div className=\"nav-wrapper light-blue darken-2\">\n        <a className=\"brand-logo\">{props.titulo}</a>\n      </div>\n    </nav>\n  </div>\n);\n\nHeader.propTypes={\n  titulo:PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component{\n\n  //crear Refs\n\n  ciudadRef=React.createRef();\n  paisRef=React.createRef();\n\n\n  buscarClima= (e)=>{\n    //prevenimos el error del default\n    e.preventDefault();\n\n    //Crear el objeto\n    const respuesta={\n      ciudad:this.ciudadRef.current.value,\n      pais:this.paisRef.current.value\n    }\n\n    //console.log(respuesta);\n\n    //enviar los this.props\n\n    this.props.datosConsulta(respuesta);\n\n  }\n  render(){\n    return(\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <form onSubmit={this.buscarClima}>\n              <div className=\"input-field col s12 m8 14 offset-m2\">\n                <input  id=\"ciudad\" ref={this.ciudadRef} type=\"text\"/>\n                <label htmlFor=\"ciudad\">Ciudad: </label>\n              </div>\n              <div className=\"input-field col s12 m8 14 offset-m2\">\n                <select ref={this.paisRef}>\n                  <option value=\"\" defaultValue>Elige un País</option>\n                  <option value=\"AR\" >Argentina</option>\n                  <option value=\"CO\" >Colombia</option>\n                  <option value=\"CR\" >Costa Rica</option>\n                  <option value=\"ES\" >España</option>\n                  <option value=\"US\" >Estados Unidos</option>\n                  <option value=\"MX\" >México</option>\n                  <option value=\"PE\" >Perú</option>\n                </select>\n                <label htmlFor=\"pais\"></label>\n              </div>\n              <div className=\"input-field col s12 m8 l4 offset-2 buscador\">\n                <input type=\"submit\"  className=\"waves-effect waves-light\n                btn-large yellow accent-4\" value=\"Buscar...\"/>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFormulario.propTypes={\n  datosConsulta:PropTypes.func.isRequired\n}\nexport default Formulario;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = (props) => {\n  return(\n    <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col s12 m6 offset-m3\">\n                <div className=\"card-panel red darken-4 error\">\n                {props.mensaje}\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nError.propTypes={\n  mensaje:PropTypes.string.isRequired\n}\n\n\nexport default Error;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clima extends Component {\n\n  mostrarResultado=()=>{\n\n    //obtener los datos de la consultar\n\n    const {name , weather, main} =this.props.resultado;\n    if(!name || !weather || !main) return null;\n\n    const kelvin=273.15;\n\n    const urlIcono=`http://openweathermap.org/img/w/${weather[0].icon}.png`;\n    const alt=\"`clima de ${name}`\";\n    return(\n      <div className=\"row\">\n          <div  className=\"resultado col s12 m8 l6 offset-m2 offset-13\">\n              <div className=\"card-panel light-blue align-center \">\n                  <span className=\"white-text\">\n                      <h2>Resultados Clima de: {name} </h2>\n                      <p className=\"temperatura\">\n                          Actual: {(main.temp-kelvin).toFixed(2)}&deg;C\n                            <img src={urlIcono} alt={alt}/>\n                      </p>\n                          <p> Temperatura Máxima: {(main.temp_max-kelvin).toFixed(2)} &deg;C</p>\n                          <p>Temperatura Minima:{(main.temp_min-kelvin).toFixed(2)} &deg;C</p>\n                  </span>\n              </div>\n          </div>\n      </div>\n\n    )\n  }\n\n  render(){\n\n    //console.log(this.props.resultado);\n    return(\n        <div className=\"container\">\n            {this.mostrarResultado()}\n        </div>\n    );\n  }\n}\n\nClima.propTypes={\n  resultado:PropTypes.object.isRequired\n}\nexport default Clima;\n","import React,{Component} from 'react';\nimport Header from \"./componentes/Header\";\nimport Formulario from \"./componentes/Formulario\";\nimport Error from \"./componentes/Error\";\nimport Clima from \"./componentes/Clima\";\n\n\nclass App extends Component {\n\n  state={\n    error:'',\n    consulta:{},\n    resultado:{}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.consulta !== this.state.consulta){\n\n        this.consultarApi();\n\n      }\n\n  }\n  componentDidMount() {\n    this.setState({\n      error: false\n    });\n\n  }\n\n  consultarApi =()=>{\n    const {ciudad,pais}=this.state.consulta;\n    if(!ciudad || !pais) return null;\n\n    const appId='c46032ed215287555a586041d1773ad3'\n    const url=`https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`\n\n    //console.log(url);\n\n    //Query con fetch API\n\n    fetch(url).then(respuesta =>{\n      return respuesta.json();\n    }).then (datos=>{\n      this.setState({\n        resultado:datos\n      })\n    }).catch(error =>{\n      console.log(error);\n    })\n\n\n    //leer la url y agregar el API key\n  }\n\n\n\n  datosConsulta= respuesta =>{\n    if(respuesta.ciudad=== ''|| respuesta.pais==='' ){\n      this.setState({\n        error:true\n      });\n    }else{\n      this.setState({\n        consulta:respuesta,\n        error:false\n      })\n    }\n  }\n\n  render(){\n\n    const {error}= this.state,\n          {cod}=this.state.resultado;\n    let resultado;\n    if(error)\n    {\n      resultado=<Error mensaje=\"Ambos campos son obligatorios\"/>\n    }else if (cod === \"404\") {\n      resultado=<Error mensaje=\"Ciudad no encontrada\"/>\n    }\n    else{\n      resultado=<Clima resultado={this.state.resultado}/>\n    }\n\n    return (\n      <div className=\"app\">\n        <Header\n          titulo=\"Clima React\"\n          />\n        <Formulario\n          datosConsulta={this.datosConsulta}\n          />\n        {resultado}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./css/index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}